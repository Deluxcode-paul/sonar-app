{"remainingRequest":"/home/lera/Projects/sonar.software-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lera/Projects/sonar.software-master/src/components/landing/landingCTA.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lera/Projects/sonar.software-master/src/components/landing/landingCTA.vue","mtime":1566953155000},{"path":"/home/lera/Projects/sonar.software-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lera/Projects/sonar.software-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/lera/Projects/sonar.software-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lera/Projects/sonar.software-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// vue-intersect polyfill\nrequire('intersection-observer');\n// vue-intersect\nimport Intersect from 'vue-intersect'\n\nexport default {\n  name: 'landingCTA',\n  components: {\n    Intersect\n  },\n  props: {\n    ctaShowBool: Boolean,\n    title: String,\n    svgInfo: String,\n    imageSource: String,\n    subtitle: String,\n    showButton: Boolean,\n    button: String,\n    buttonClass: String,\n    imageClass: String,\n    buttonPage: String,\n    ctaClassNames: {\n      type: String,\n      required: true\n    }\n  },\n  methods: {\n    ctaShow() {\n      this.ctaShowBool = true\n    },\n    ctaHide() {\n      this.ctaShowBool = false\n    }\n  }\n}\n",{"version":3,"sources":["landingCTA.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"landingCTA.vue","sourceRoot":"src/components/landing","sourcesContent":["<template>\n  <div id=\"pivot\">\n    <div :class=\"ctaClassNames\">\n      <div class=\"center-block align-center-laptop padding-s-all\">\n        <h3 class=\"margin-xs-bottom\">{{ title }}</h3>\n        <p class=\"lead color-opaque center-block\">{{ subtitle }}</p>\n        <router-link\n          v-show=\"showButton\"\n          :to=\"buttonPage\"\n          :class=\"buttonClass\"\n        >\n          <svg width=\"26\" height=\"26\">\n            <path\n              :d=\"svgInfo\"\n              fill=\"#ffffff\"\n            ></path>\n          </svg>\n          <slot></slot>\n          {{ button }}\n        </router-link>\n      </div>\n      <intersect @enter=\"ctaShow()\" @leave=\"ctaHide()\">\n        <div\n          :class=\"[\n            ctaShowBool\n              ? 'flex flex-end hide-tablet strip-top-laptop cta-show'\n              : 'flex flex-end hide-tablet strip-top-laptop'\n          ]\"\n        >\n          <img :class=\"imageClass\" :src=\"imageSource\" />\n        </div>\n      </intersect>\n    </div>\n  </div>\n</template>\n\n<script>\n// vue-intersect polyfill\nrequire('intersection-observer');\n// vue-intersect\nimport Intersect from 'vue-intersect'\n\nexport default {\n  name: 'landingCTA',\n  components: {\n    Intersect\n  },\n  props: {\n    ctaShowBool: Boolean,\n    title: String,\n    svgInfo: String,\n    imageSource: String,\n    subtitle: String,\n    showButton: Boolean,\n    button: String,\n    buttonClass: String,\n    imageClass: String,\n    buttonPage: String,\n    ctaClassNames: {\n      type: String,\n      required: true\n    }\n  },\n  methods: {\n    ctaShow() {\n      this.ctaShowBool = true\n    },\n    ctaHide() {\n      this.ctaShowBool = false\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n.cta-img {\nborder-radius: 0px 0px 12px 12px;\nheight: auto;\n}\n\n.flex-end {\n  transform: translateY(0px);\n  transition: all 1.5s;\n}\n\n.cta-show {\n  transform: translateY(0px);\n}\n</style>\n"]}]}