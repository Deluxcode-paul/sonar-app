{"remainingRequest":"/home/lera/Projects/sonar.software-master/node_modules/babel-loader/lib/index.js!/home/lera/Projects/sonar.software-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/lera/Projects/sonar.software-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lera/Projects/sonar.software-master/src/components/utils/wideButton.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lera/Projects/sonar.software-master/src/components/utils/wideButton.vue","mtime":1568642292212},{"path":"/home/lera/Projects/sonar.software-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lera/Projects/sonar.software-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/lera/Projects/sonar.software-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lera/Projects/sonar.software-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'wideButton',\n  props: {\n    text: {\n      default: 'Click here',\n      type: String\n    },\n    buttonStyle: {\n      default: 'btn btn-lg btn-primary btn-block mb-2',\n      type: String\n    }\n  },\n  data: function data() {\n    return {\n      animate: true\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    setInterval(function () {\n      return _this.animate = !_this.animate;\n    }, 4000);\n  }\n};",{"version":3,"sources":["wideButton.vue"],"names":[],"mappings":";;;;;;;;;;;AAYA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,OAAA,EAAA,YADA;AAEA,MAAA,IAAA,EAAA;AAFA,KADA;AAKA,IAAA,WAAA,EAAA;AACA,MAAA,OAAA,EAAA,uCADA;AAEA,MAAA,IAAA,EAAA;AAFA;AALA,GAFA;AAYA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,OAAA,EAAA;AADA,KAAA;AAAA,GAZA;AAeA,EAAA,OAfA,qBAeA;AAAA;;AACA,IAAA,WAAA,CAAA;AAAA,aAAA,KAAA,CAAA,OAAA,GAAA,CAAA,KAAA,CAAA,OAAA;AAAA,KAAA,EAAA,IAAA,CAAA;AACA;AAjBA,CAAA","sourcesContent":["<template>\n    <form>\n        <div class=\"svg-wrapper-button\">\n        <svg height=\"60\" width=\"320\" xmlns=\"http://www.w3.org/2000/svg\">\n            <rect :class=\"animate ? 'shape' : 'shapeNoAnimation'\" height=\"60\" width=\"320\" />\n        </svg>\n            <button class=\"textButton\" :class=\"buttonStyle\" type=\"submit\">{{ text }}</button>\n        </div>\n    </form>\n</template>\n\n<script>\n    export default {\n        name: 'wideButton',\n        props: {\n            text: {\n                default: 'Click here',\n                type: String\n            },\n            buttonStyle: {\n                default: 'btn btn-lg btn-primary btn-block mb-2',\n                type: String\n            }\n        },\n        data: () => ({\n            animate: true\n        }),\n        mounted() {\n            setInterval(() => this.animate = !this.animate, 4000);\n        }\n    }\n</script>\n<style lang=\"scss\">\n    .svg-wrapper-button {\n        height: 60px;\n        margin: 0 auto;\n        position: relative;\n        top: 0px;\n        width: 320px;\n        transition: 1s;\n        .shape {\n            fill: transparent;\n            stroke-dasharray: 140 540;\n            stroke-dashoffset: -474;\n            stroke-width: 8px;\n            stroke: #07f;\n            animation: draw 4s ease infinite;\n        }\n        .shapeNoAnimation {\n            fill: transparent;\n            stroke-dasharray: 140 540;\n            stroke-dashoffset: -474;\n            stroke-width: 8px;\n            stroke: #07f;\n        }\n\n        .textButton {\n            color: #fff;\n            font-size: 22px;\n            position: relative;\n            top: -48px;\n            left: 45px;\n            text-align: center;\n        }\n    }\n    .svg-wrapper-button:hover {\n        background: #07f;\n    }\n\n    @keyframes draw {\n        0% {\n            stroke-dasharray: 140 540;\n            stroke-dashoffset: -474;\n            stroke-width: 8px;\n        }\n        100% {\n            stroke-dasharray: 760;\n            stroke-dashoffset: 0;\n            stroke-width: 2px;\n        }\n    }\n    button {\n        padding: 0;\n    }\n</style>\n\n"],"sourceRoot":"src/components/utils"}]}